mutation CreateList($name: String!, $description: String, $isPublic: Boolean!) @auth(level: USER) {
  list_insert(data: {
    name: $name,
    description: $description,
    isPublic: $isPublic,
    userId_expr: "auth.uid",
    createdAt_expr: "request.time",
    updatedAt_expr: "request.time"
  })
}

query GetMyLists @auth(level: USER) {
  lists(where: {userId: {eq_expr: "auth.uid"}}) {
    id
    name
    description
    isPublic
    createdAt
    updatedAt
  }
}

mutation AddMovieToList($listId: UUID!, $movieId: UUID!, $note: String, $position: Int!) @auth(level: USER) {
  listMovie_insert(data: {
    listId: $listId,
    movieId: $movieId,
    note: $note,
    position: $position,
    createdAt_expr: "request.time"
  })
}

mutation CreateReview($movieId: UUID!, $rating: Int!, $reviewText: String, $isPublic: Boolean!) @auth(level: USER) {
  review_insert(data: {
    movieId: $movieId,
    userId_expr: "auth.uid",
    rating: $rating,
    reviewText: $reviewText,
    isPublic: $isPublic,
    createdAt_expr: "request.time",
    updatedAt_expr: "request.time"
  })
}